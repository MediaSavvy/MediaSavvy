export { A as AnsiLanguage, f as Awaitable, B as BuiltinLanguage, a as BuiltinTheme, o as BundledHighlighterOptions, u as CodeOptionsMeta, s as CodeOptionsMultipleThemes, r as CodeOptionsSingleTheme, t as CodeOptionsThemes, C as CodeToHastOptions, q as CodeToHastOptionsCommon, c as CodeToThemedTokensOptions, d as CodeToTokensWithThemesOptions, F as FontStyle, n as HighlighterCoreOptions, H as HighlighterGeneric, E as HtmlRendererOptions, D as HtmlRendererOptionsCommon, e as IGrammar, I as IRawGrammar, L as LanguageInput, p as LanguageRegistration, h as MaybeArray, M as MaybeGetter, g as MaybeModule, P as PlainTextLanguage, b as RequireKeys, k as ResolveBundleKey, m as ShikiContext, z as ShikijiTransformer, y as ShikijiTransformerContext, S as SpecialLanguage, j as StringLiteralUnion, i as ThemeInput, x as ThemeRegistration, w as ThemeRegistrationRaw, T as ThemedToken, J as ThemedTokenExplanation, G as ThemedTokenScopeExplanation, v as TransformerOptions } from './types/langs.mjs';
